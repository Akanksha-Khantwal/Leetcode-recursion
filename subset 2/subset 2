class Solution {
  public:
    void solve(int index, vector<int>& arr, vector<int>& curr, vector<vector<int>>& ans) {
        // Base case
        if (index == arr.size()) {
            ans.push_back(curr);
            return;
        }
        
        // PICK the current element
        curr.push_back(arr[index]);
        solve(index + 1, arr, curr, ans);
        curr.pop_back(); // backtrack
        
        // NOT PICK the current element
        while (index + 1 < arr.size() && arr[index] == arr[index + 1])
            index++;
            
        solve(index + 1, arr, curr, ans);
    }
    
    vector<vector<int>> findSubsets(vector<int>& arr) {
        sort(arr.begin(), arr.end());
        vector<vector<int>> ans;
        vector<int> curr;
        
        solve(0, arr, curr, ans);
    
        sort(ans.begin(), ans.end());
        return ans;
    }
};
